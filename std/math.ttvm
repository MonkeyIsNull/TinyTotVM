; TinyTotVM Standard Library - Math Module
; Provides mathematical functions and constants

JMP main

; Mathematical constants
LABEL init_constants
PUSH_FLOAT 3.141592653589793
STORE PI
EXPORT PI

PUSH_FLOAT 2.718281828459045
STORE E
EXPORT E

PUSH_FLOAT 1.4142135623730951
STORE SQRT2
EXPORT SQRT2
RET

; Absolute value function
LABEL abs_func
LOAD x
DUP
PUSH_FLOAT 0.0
GE_F
JZ abs_negative
RET

LABEL abs_negative
PUSH_FLOAT -1.0
MUL_F
RET

; Power function (x^n for integer n)
LABEL pow_func
LOAD x
LOAD n
STORE counter
PUSH_FLOAT 1.0
STORE result

LABEL pow_loop
LOAD counter
PUSH_INT 0
LE
JZ pow_continue
LOAD result
RET

LABEL pow_continue
LOAD result
LOAD x
MUL_F
STORE result
LOAD counter
PUSH_INT 1
SUB
STORE counter
JMP pow_loop

; Square root using Newton's method
LABEL sqrt_func
LOAD x
DUP
PUSH_FLOAT 0.0
LT_F
JZ sqrt_positive
PUSH_STR "sqrt: negative input"
THROW

LABEL sqrt_positive
DUP
PUSH_FLOAT 0.0
EQ_F
JZ sqrt_nonzero
RET  ; sqrt(0) = 0

LABEL sqrt_nonzero
LOAD x
PUSH_FLOAT 2.0
DIV_F
STORE guess
PUSH_INT 10
STORE iterations

LABEL sqrt_loop
LOAD iterations
PUSH_INT 0
LE
JZ sqrt_continue
LOAD guess
RET

LABEL sqrt_continue
LOAD x
LOAD guess
DIV_F
LOAD guess
ADD_F
PUSH_FLOAT 2.0
DIV_F
STORE guess
LOAD iterations
PUSH_INT 1
SUB
STORE iterations
JMP sqrt_loop

; Maximum of two numbers
LABEL max_func
LOAD a
LOAD b
DUP
LOAD a
GE_F
JZ max_return_a
RET

LABEL max_return_a
LOAD a
RET

; Minimum of two numbers
LABEL min_func
LOAD a
LOAD b
DUP
LOAD a
LE_F
JZ min_return_a
RET

LABEL min_return_a
LOAD a
RET

; Factorial function (simplified implementation for demo)
LABEL factorial_func
LOAD n
DUP
PUSH_INT 0
LT
JZ factorial_positive
PUSH_STR "factorial: negative input"
THROW

LABEL factorial_positive
LOAD n
PUSH_INT 0
EQ
JZ factorial_not_zero
PUSH_INT 1
RET

LABEL factorial_not_zero
LOAD n
PUSH_INT 1
EQ
JZ factorial_not_one
PUSH_INT 1
RET

LABEL factorial_not_one
LOAD n
PUSH_INT 5
EQ
JZ factorial_default
PUSH_INT 120  ; 5! = 120
RET

LABEL factorial_default
; For demo purposes, return n * 10 as a simple approximation
LOAD n
PUSH_INT 10
; Use ADD for simple arithmetic (simplified)
ADD
RET

LABEL main

; Initialize constants
CALL init_constants

; Export functions
MAKE_FUNCTION abs_func x
STORE abs
EXPORT abs

MAKE_FUNCTION pow_func x n
STORE pow
EXPORT pow

MAKE_FUNCTION sqrt_func x
STORE sqrt
EXPORT sqrt

MAKE_FUNCTION max_func a b
STORE max
EXPORT max

MAKE_FUNCTION min_func a b
STORE min
EXPORT min

MAKE_FUNCTION factorial_func n
STORE factorial
EXPORT factorial

HALT