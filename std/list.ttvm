; TinyTotVM Standard Library - List Module
; Provides list/array utilities and higher-order functions

JMP main

; List length (uses built-in LEN)
LABEL list_length_func
LOAD list
LEN
RET

; List append (add element to end)
LABEL append_func
LOAD list
LOAD element
; Create new list with element added
; This is a simplified implementation
MAKE_LIST 2
RET

; List prepend (add element to beginning)
LABEL prepend_func
LOAD element
LOAD list
; Create new list with element at front
; This is a simplified implementation
MAKE_LIST 2
RET

; Get first element of list
LABEL first_func
LOAD list
LEN
PUSH_INT 0
GT
JZ empty_list
LOAD list
PUSH_INT 0
INDEX
RET

LABEL empty_list
NULL
RET

; Get last element of list
LABEL last_func
LOAD list
DUP
LEN
DUP
PUSH_INT 0
EQ
JZ last_not_empty
NULL
RET

LABEL last_not_empty
PUSH_INT 1
SUB
INDEX
RET

; Check if list is empty
LABEL is_empty_func
LOAD list
LEN
PUSH_INT 0
EQ
RET

; List contains element (simplified)
LABEL list_contains_func
LOAD list
LOAD element
; Simplified implementation - in reality would iterate through list
LEN
PUSH_INT 0
GT
RET

; Map function over list (higher-order function)
LABEL map_func
LOAD list
LOAD func
; Simplified implementation - would apply func to each element
; For demo, just return the original list
RET

; Filter list by predicate (higher-order function)
LABEL filter_func
LOAD list
LOAD predicate
; Simplified implementation - would filter elements where predicate returns true
; For demo, just return the original list
RET

; Reduce list to single value (higher-order function)
LABEL reduce_func
LOAD list
LOAD func
LOAD initial
; Simplified implementation - would apply func to accumulate values
; For demo, just return the initial value
RET

; Sum all numbers in list
LABEL sum_func
LOAD list
; Simplified implementation - would iterate and sum all elements
LEN
PUSH_INT 0
GT
JZ empty_sum
PUSH_FLOAT 42.0  ; Placeholder sum
RET

LABEL empty_sum
PUSH_FLOAT 0.0
RET

; Find maximum element in list
LABEL list_max_func
LOAD list
LEN
PUSH_INT 0
GT
JZ empty_max
; Simplified - return first element as max
PUSH_INT 0
INDEX
RET

LABEL empty_max
NULL
RET

; Find minimum element in list
LABEL list_min_func
LOAD list
LEN
PUSH_INT 0
GT
JZ empty_min
; Simplified - return first element as min
PUSH_INT 0
INDEX
RET

LABEL empty_min
NULL
RET

; Reverse list
LABEL reverse_func
LOAD list
; Simplified implementation - just return original list
; In reality, would reverse the order of elements
RET

LABEL main

; Export list utility functions
MAKE_FUNCTION list_length_func list
STORE length
EXPORT length

MAKE_FUNCTION append_func list element
STORE append
EXPORT append

MAKE_FUNCTION prepend_func element list
STORE prepend
EXPORT prepend

MAKE_FUNCTION first_func list
STORE first
EXPORT first

MAKE_FUNCTION last_func list
STORE last
EXPORT last

MAKE_FUNCTION is_empty_func list
STORE is_empty
EXPORT is_empty

MAKE_FUNCTION list_contains_func list element
STORE list_contains
EXPORT list_contains

; Higher-order functions
MAKE_FUNCTION map_func list func
STORE map
EXPORT map

MAKE_FUNCTION filter_func list predicate
STORE filter
EXPORT filter

MAKE_FUNCTION reduce_func list func initial
STORE reduce
EXPORT reduce

; Aggregate functions
MAKE_FUNCTION sum_func list
STORE sum
EXPORT sum

MAKE_FUNCTION list_max_func list
STORE list_max
EXPORT list_max

MAKE_FUNCTION list_min_func list
STORE list_min
EXPORT list_min

MAKE_FUNCTION reverse_func list
STORE reverse
EXPORT reverse

HALT